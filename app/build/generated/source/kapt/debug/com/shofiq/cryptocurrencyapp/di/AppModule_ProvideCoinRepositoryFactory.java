// Generated by Dagger (https://dagger.dev).
package com.shofiq.cryptocurrencyapp.di;

import com.shofiq.cryptocurrencyapp.data.remote.CoinPaprikaApi;
import com.shofiq.cryptocurrencyapp.domain.repository.CoinRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCoinRepositoryFactory implements Factory<CoinRepository> {
  private final Provider<CoinPaprikaApi> apiProvider;

  public AppModule_ProvideCoinRepositoryFactory(Provider<CoinPaprikaApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public CoinRepository get() {
    return provideCoinRepository(apiProvider.get());
  }

  public static AppModule_ProvideCoinRepositoryFactory create(
      Provider<CoinPaprikaApi> apiProvider) {
    return new AppModule_ProvideCoinRepositoryFactory(apiProvider);
  }

  public static CoinRepository provideCoinRepository(CoinPaprikaApi api) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCoinRepository(api));
  }
}
