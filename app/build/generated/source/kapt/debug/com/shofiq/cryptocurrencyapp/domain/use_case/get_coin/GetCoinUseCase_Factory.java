// Generated by Dagger (https://dagger.dev).
package com.shofiq.cryptocurrencyapp.domain.use_case.get_coin;

import com.shofiq.cryptocurrencyapp.domain.repository.CoinRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetCoinUseCase_Factory implements Factory<GetCoinUseCase> {
  private final Provider<CoinRepository> repositoryProvider;

  public GetCoinUseCase_Factory(Provider<CoinRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetCoinUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetCoinUseCase_Factory create(Provider<CoinRepository> repositoryProvider) {
    return new GetCoinUseCase_Factory(repositoryProvider);
  }

  public static GetCoinUseCase newInstance(CoinRepository repository) {
    return new GetCoinUseCase(repository);
  }
}
