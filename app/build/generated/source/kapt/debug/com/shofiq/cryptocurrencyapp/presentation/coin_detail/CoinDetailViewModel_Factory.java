// Generated by Dagger (https://dagger.dev).
package com.shofiq.cryptocurrencyapp.presentation.coin_detail;

import androidx.lifecycle.SavedStateHandle;
import com.shofiq.cryptocurrencyapp.domain.use_case.get_coin.GetCoinUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoinDetailViewModel_Factory implements Factory<CoinDetailViewModel> {
  private final Provider<GetCoinUseCase> getCoinUseCaseProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public CoinDetailViewModel_Factory(Provider<GetCoinUseCase> getCoinUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.getCoinUseCaseProvider = getCoinUseCaseProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public CoinDetailViewModel get() {
    return newInstance(getCoinUseCaseProvider.get(), savedStateHandleProvider.get());
  }

  public static CoinDetailViewModel_Factory create(Provider<GetCoinUseCase> getCoinUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new CoinDetailViewModel_Factory(getCoinUseCaseProvider, savedStateHandleProvider);
  }

  public static CoinDetailViewModel newInstance(GetCoinUseCase getCoinUseCase,
      SavedStateHandle savedStateHandle) {
    return new CoinDetailViewModel(getCoinUseCase, savedStateHandle);
  }
}
